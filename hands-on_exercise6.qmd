---
title: "Time-Oriented Data Visualization"
author: "Hands-on Exercise 6"
format: html
editor: visual
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## 17.3 Install and Load Packages

```{r}
required_packages <- c("scales", "viridis", "lubridate", "ggthemes", "gridExtra", 
                       "readxl", "knitr", "data.table", "tidyverse", "CGPfunctions")

installed <- rownames(installed.packages())
to_install <- setdiff(required_packages, installed)
if (length(to_install) > 0) install.packages(to_install)

lapply(required_packages, library, character.only = TRUE)
```

## 17.4 Calendar Heatmap

### Import Data

```{r}
attacks <- read_csv("hands-on_exercise6/eventlog.csv")
```

### Data Preparation

```{r}
make_hr_wkday <- function(ts, sc, tz) {
  real_times <- ymd_hms(ts, tz = tz[1], quiet = TRUE)
  dt <- data.table(source_country = sc,
                   wkday = weekdays(real_times),
                   hour = hour(real_times))
  return(dt)
}

wkday_levels <- c('Saturday', 'Friday', 'Thursday', 'Wednesday', 
                  'Tuesday', 'Monday', 'Sunday')

attacks <- attacks %>%
  group_by(tz) %>%
  do(make_hr_wkday(.$timestamp, .$source_country, .$tz)) %>%
  ungroup() %>%
  mutate(wkday = factor(wkday, levels = wkday_levels),
         hour = factor(hour, levels = 0:23))
```

### Single Calendar Heatmap

```{r}
grouped <- attacks %>% 
  count(wkday, hour) %>% 
  ungroup() %>% 
  na.omit()

ggplot(grouped, aes(hour, wkday, fill = n)) + 
  geom_tile(color = "white", size = 0.1) + 
  theme_tufte(base_family = "Helvetica") + 
  coord_equal() +
  scale_fill_gradient(name = "# of attacks", low = "sky blue", high = "dark blue") +
  labs(x = NULL, y = NULL, title = "Attacks by weekday and time of day") +
  theme(axis.ticks = element_blank(),
        plot.title = element_text(hjust = 0.5),
        legend.title = element_text(size = 8),
        legend.text = element_text(size = 6))
```

### Multiple Calendar Heatmaps

```{r}
attacks_by_country <- count(attacks, source_country) %>%
  mutate(percent = percent(n/sum(n))) %>%
  arrange(desc(n))

top4 <- attacks_by_country$source_country[1:4]

top4_attacks <- attacks %>%
  filter(source_country %in% top4) %>%
  count(source_country, wkday, hour) %>%
  ungroup() %>%
  mutate(source_country = factor(source_country, levels = top4)) %>%
  na.omit()

ggplot(top4_attacks, aes(hour, wkday, fill = n)) + 
  geom_tile(color = "white", size = 0.1) + 
  theme_tufte(base_family = "Helvetica") + 
  coord_equal() +
  scale_fill_gradient(name = "# of attacks", low = "sky blue", high = "dark blue") +
  facet_wrap(~source_country, ncol = 2) +
  labs(x = NULL, y = NULL, title = "Attacks on top 4 countries by weekday and time of day") +
  theme(axis.ticks = element_blank(),
        axis.text.x = element_text(size = 7),
        plot.title = element_text(hjust = 0.5),
        legend.title = element_text(size = 8),
        legend.text = element_text(size = 6))
```

## 17.5 Cycle Plot

```{r}
air <- read_excel("data/arrivals_by_air.xlsx")
air$month <- factor(month(air$`Month-Year`), levels=1:12, labels=month.abb, ordered=TRUE) 
air$year <- year(ymd(air$`Month-Year`))

Vietnam <- air %>% 
  select(`Vietnam`, month, year) %>%
  filter(year >= 2010)

hline.data <- Vietnam %>% 
  group_by(month) %>%
  summarise(avgvalue = mean(`Vietnam`, na.rm = TRUE))

ggplot() + 
  geom_line(data=Vietnam,
            aes(x=year, y=`Vietnam`, group=month), colour="black") +
  geom_hline(aes(yintercept=avgvalue), data=hline.data, linetype=6, colour="red", size=0.5) + 
  facet_grid(~month) +
  labs(axis.text.x = element_blank(),
       title = "Visitor arrivals from Vietnam by air, Jan 2010–Dec 2019") +
  xlab("") +
  ylab("No. of Visitors") +
  theme_tufte(base_family = "Helvetica")
```

## 17.6 Slopegraph

```{r}
rice <- read_csv("data/rice.csv")

rice %>% 
  mutate(Year = factor(Year)) %>%
  filter(Year %in% c(1961, 1980)) %>%
  newggslopegraph(Year, Yield, Country,
                  Title = "Rice Yield of Top 11 Asian Countries",
                  SubTitle = "1961–1980",
                  Caption = "Prepared by: Dr. Kam Tin Seong")

---
